
#  실제 SparkApplication File들을 저장할 File-storage PVC 생성

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: many-pvc
  namespace: spark-operator
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
  storageClassName: ceph-filesystem

---

#  아래 부터는 SparkApplication File들을 쉽게 업로드 할 수 있도록 Web-UI 기반 File System FileBrowser를 배포하는 yaml 파일이다.

apiVersion: apps/v1
kind: Deployment
metadata:
  name: filebrowser
  namespace: spark-operator
spec:
  replicas: 1
  selector:
    matchLabels:
      app: filebrowser
  template:
    metadata:
      labels:
        app: filebrowser
    spec:
      initContainers:      # 초기화 컨테이너 추가
      - name: init-config
        image: busybox
        command: ['sh', '-c', 'mkdir -p /mnt/ceph-pvc/config && if [ ! -f /mnt/ceph-pvc/config/filebrowser_config.json ]; then echo "{ \"port\": 80, \"baseURL\": \"\", \"database\": \"/mnt/ceph-pvc/database.db\", \"root\": \"/mnt/ceph-pvc\" }" > /mnt/ceph-pvc/config/filebrowser_config.json; fi']
        volumeMounts:
        - mountPath: "/mnt/ceph-pvc"
          name: cephfs-storage
      containers:
      - name: filebrowser
        image: filebrowser/filebrowser
        volumeMounts:
        - mountPath: "/mnt/ceph-pvc"
          name: cephfs-storage
        ports:
        - containerPort: 80
        args: ["-c", "/mnt/ceph-pvc/config/filebrowser_config.json"]
      volumes:
      - name: cephfs-storage
        persistentVolumeClaim:
          claimName: file-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: filebrowser
  namespace: spark-operator
  labels:
    ark.ulagbulag.io/test-ip-pool: "true"
spec:
  selector:
    app: filebrowser
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  type: LoadBalancer