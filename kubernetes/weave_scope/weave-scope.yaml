---
apiVersion: v1
kind: Namespace
metadata:
  name: weave-scope
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: weave-scope
  namespace: weave-scope
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: weave-scope
rules:
  - apiGroups:
      - ""
    resources:
      - pods
      - pods/log
      - replicationcontrollers
      - services
      - namespaces
      - persistentvolumes
      - persistentvolumeclaims
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - delete
  - apiGroups:
      - apps
    resources:
      - deployments
      - statefulsets
      - daemonsets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - batch
    resources:
      - cronjobs
      - jobs
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
    resources:
      - daemonsets
      - deployments
      - deployments/scale
      - replicasets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
    resources:
      - deployments/scale
    verbs:
      - update
  - apiGroups:
      - apps
    resources:
      - deployments/scale
    verbs:
      - get
      - update
  - apiGroups:
      - storage.k8s.io
    resources:
      - storageclasses
    verbs:
      - list
      - watch
  - apiGroups:
      - extensions
    resourceNames:
      - weave-scope
    resources:
      - podsecuritypolicies
    verbs:
      - use
  - apiGroups:
      - volumesnapshot.external-storage.k8s.io
    resources:
      - volumesnapshots
      - volumesnapshotdatas
    verbs:
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - get
      - list
      - watch
      - update
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: weave-scope
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: weave-scope
subjects:
  - kind: ServiceAccount
    name: weave-scope
    namespace: weave-scope
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: weave-scope-app
  namespace: weave-scope
  labels:
    app: weave-scope
spec:
  replicas: 1
  selector:
    matchLabels:
      app: weave-scope
  template:
    metadata:
      labels:
        app: weave-scope
    spec:
      serviceAccountName: weave-scope
      containers:
        - name: weave-scope
          image: weaveworks/scope:1.13.2
          imagePullPolicy: IfNotPresent
          args:
            - '--no-probe'
            - '--weave=false'
          ports:
            - containerPort: 4040
          resources:
            requests:
              cpu: 200m
              memory: 200Mi
      nodeSelector:
        kubernetes.io/os: linux
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: weave-scope-agent
  namespace: weave-scope
  labels:
    app: weave-scope
spec:
  selector:
    matchLabels:
      app: weave-scope-agent
  template:
    metadata:
      labels:
        app: weave-scope-agent
    spec:
      serviceAccountName: weave-scope
      hostNetwork: true
      hostPID: true
      containers:
        - name: weave-scope-agent
          image: weaveworks/scope:1.13.2
          imagePullPolicy: IfNotPresent
          securityContext:
            privileged: true
          args:
            - '--mode=probe'
            - '--probe-only'
            - '--probe.kubernetes.role=host'
            - '--probe.kubernetes.namespace=name-twin'  # 여기에 모니터링할 네임스페이스 지정
            - 'weave-scope-app.weave-scope.svc.cluster.local:4040'
          env:
            - name: SCOPE_HOSTNAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          resources:
            requests:
              cpu: 100m
              memory: 100Mi                              
          volumeMounts:
            - name: docker-socket
              mountPath: /var/run/docker.sock
            - name: scope-plugins
              mountPath: /var/run/scope/plugins
            - name: sys-kernel-debug
              mountPath: /sys/kernel/debug
      dnsPolicy: ClusterFirstWithHostNet
      tolerations:
        - effect: NoSchedule
          operator: Exists      
      volumes:
        - name: docker-socket
          hostPath:
            path: /var/run/docker.sock
        - name: scope-plugins
          hostPath:
            path: /var/run/scope/plugins
        - name: sys-kernel-debug
          hostPath:
            path: /sys/kernel/debug
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: weave-scope-cluster-agent
  namespace: weave-scope
  labels:
    app: weave-scope
spec:
  replicas: 1
  selector:
    matchLabels:
      app: weave-scope-cluster-agent
  template:
    metadata:
      labels:
        app: weave-scope-cluster-agent
    spec:
      serviceAccountName: weave-scope
      containers:
        - name: scope-cluster-agent
          image: weaveworks/scope:1.13.2 
          imagePullPolicy: IfNotPresent
          args:
            - '--mode=probe'
            - '--probe-only'
            - '--probe.kubernetes.role=cluster'
            - 'weave-scope-app.weave-scope.svc.cluster.local:4040'
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          volumeMounts:
            - name: scope-plugins
              mountPath: /var/run/scope/plugins
      volumes:
        - name: scope-plugins
          hostPath:
            path: /var/run/scope/plugins
      nodeSelector:
        kubernetes.io/os: linux

---
apiVersion: v1
kind: Service
metadata:
  name: weave-scope
  namespace: weave-scope
  labels:
    app: weave-scope
    ark.ulagbulag.io/is-external: "true"
    ark.ulagbulag.io/is-private: "true"
spec:
  type: LoadBalancer
  ports:
    - port: 4040
      targetPort: 4040
  selector:
    app: weave-scope

---
apiVersion: v1
kind: Service
metadata:
  name: weave-scope-agent
  namespace: weave-scope
spec:
  type: ClusterIP
  ports:
    - name: app
      port: 4040
  selector:
    app: weave-scope-agent